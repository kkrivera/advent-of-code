import { run } from '../run';

type Side = 'left' | 'right' | 'top' | 'bottom';
type Rotation = 'CCW' | 'CW';
type Flip = 'X' | 'Y';
type Grid = string[][];
interface Tile {
  id: string;
  grid: Grid;
  matches: Partial<{ [key in Side]: string }>;
}
interface Tiles {
  [id: string]: Tile;
}
type Edge = string[];
type Edges = { [key in Side]: Edge };

const RotationsMap: { [key in Side]: { [key in Side]: Rotation[] } } = {
  top: {
    bottom: [],
    right: ['CW'],
    left: ['CCW'],
    top: ['CW', 'CW'],
  },
  bottom: {
    bottom: ['CW', 'CW'],
    right: ['CCW'],
    left: ['CW'],
    top: [],
  },
  left: {
    right: [],
    left: ['CW', 'CW'],
    top: ['CW'],
    bottom: ['CCW'],
  },
  right: {
    left: [],
    right: ['CW', 'CW'],
    top: ['CCW'],
    bottom: ['CW'],
  },
};

function getEdges(tile: Tile): Edges {
  const { grid } = tile;

  const leftEdge: string[] = [];
  const rightEdge: string[] = [];
  for (let i = 0; i < grid.length; i++) {
    const row = grid[i];
    leftEdge.push(row[0]);
    rightEdge.push(row[row.length - 1]);
  }

  return {
    top: grid[0],
    bottom: grid[grid.length - 1],
    left: leftEdge,
    right: rightEdge,
  };
}

function rotateGrid(grid: string[][], direction: Rotation) {
  const source = grid.map((row) => [...row]);

  source.forEach((row, i) => {
    row.forEach((cell, j) => {
      if (direction === 'CCW') grid[grid.length - 1 - j][i] = cell;
      else if (direction === 'CW') grid[j][grid.length - 1 - i] = cell;
    });
  });
}

function rotateTile(tile: Tile, direction: Rotation) {
  rotateGrid(tile.grid, direction);

  const tmpMatches = tile.matches.top;
  const matches = tile.matches;
  if (direction === 'CCW') {
    matches.top = matches.right;
    matches.right = matches.bottom;
    matches.bottom = matches.left;
    matches.left = tmpMatches;
  } else if (direction === 'CW') {
    matches.top = matches.left;
    matches.left = matches.bottom;
    matches.bottom = matches.right;
    matches.right = tmpMatches;
  }
}

function flipGrid(grid: string[][], direction: Flip) {
  grid.forEach((row, i) => {
    for (let j = 0; j < grid.length / 2; j++) {
      const swapIdx = grid.length - 1 - j;

      if (direction === 'X') {
        // Swap cells in a single row
        const tmp = row[j];
        row[j] = row[swapIdx];
        row[swapIdx] = tmp;
      } else if (direction === 'Y') {
        // Swap cells in a single column
        const tmp = grid[j][i];
        grid[j][i] = grid[swapIdx][i];
        grid[swapIdx][i] = tmp;
      }
    }
  });
}

function flipTile(tile: Tile, direction: Flip) {
  flipGrid(tile.grid, direction);

  if (direction === 'X') {
    // Swap horizontal matches we already have
    const tmpMatches = tile.matches.left;
    tile.matches.left = tile.matches.right;
    tile.matches.right = tmpMatches;
  } else if (direction === 'Y') {
    // Swap vertical matches we already have
    const tmpMatches = tile.matches.top;
    tile.matches.top = tile.matches.bottom;
    tile.matches.bottom = tmpMatches;
  }
}

function assignMatchedEdges(
  side: Side,
  edge: Edge,
  tile: Tile,
  compareTile: Tile
): boolean {
  let topSame = true;
  let topFlipSame = true;
  let rightSame = true;
  let rightFlipSame = true;
  let bottomSame = true;
  let bottomFlipSame = true;
  let leftSame = true;
  let leftFlipSame = true;

  const { top, right, bottom, left } = getEdges(compareTile);

  edge.forEach((cell, i) => {
    const flipIdx = edge.length - 1 - i;
    topSame = topSame && cell === top[i];
    topFlipSame = topFlipSame && cell === top[flipIdx];
    rightSame = rightSame && cell === right[i];
    rightFlipSame = rightFlipSame && cell === right[flipIdx];
    bottomSame = bottomSame && cell === bottom[i];
    bottomFlipSame = bottomFlipSame && cell === bottom[flipIdx];
    leftSame = leftSame && cell === left[i];
    leftFlipSame = leftFlipSame && cell === left[flipIdx];
  });

  const isMatchedEdge =
    topSame ||
    topFlipSame ||
    rightSame ||
    rightFlipSame ||
    bottomSame ||
    bottomFlipSame ||
    leftSame ||
    leftFlipSame;

  if (isMatchedEdge) {
    const matchedSide: Side =
      topSame || topFlipSame
        ? 'top'
        : bottomSame || bottomFlipSame
        ? 'bottom'
        : leftSame || leftFlipSame
        ? 'left'
        : 'right';

    // Bind tiles together before transformations
    tile.matches[side] = compareTile.id;
    compareTile.matches[matchedSide] = tile.id;

    // Transform and Lock the compared tile
    let flip: Flip;

    // Determine if the match has a required flip
    if (
      ((side === 'top' || side === 'right') &&
        (topSame || rightSame || bottomFlipSame || leftFlipSame)) ||
      ((side === 'left' || side === 'bottom') &&
        (topFlipSame || rightFlipSame || bottomSame || leftSame))
    ) {
      flip = side === 'top' || side === 'bottom' ? 'X' : 'Y';
    }

    // Perform necessary rotations
    const rotations = RotationsMap[side][matchedSide];
    rotations.forEach((rotation) => rotateTile(compareTile, rotation));

    // Perform the necessary flip operation
    if (flip) flipTile(compareTile, flip);

    // Clean up transformations
    const matches = compareTile.matches;
    if (!matches.top) delete matches.top;
    if (!matches.right) delete matches.right;
    if (!matches.bottom) delete matches.bottom;
    if (!matches.left) delete matches.left;
  }

  return isMatchedEdge;
}

function compareEdges(tile1: Tile, tile2: Tile): boolean {
  const tile1Edges = getEdges(tile1);

  return Object.keys(tile1Edges).reduce((acc, side: Side) => {
    // No need to perform more operations if we've already matched a side
    if (acc) return acc;

    // Edge of first tile to compare with all sides of tile 2
    let isMatchedEdge = assignMatchedEdges(
      side,
      tile1Edges[side],
      tile1,
      tile2
    );

    return acc || isMatchedEdge;
  }, false);
}

function recursiveAssignment(
  tile: Tile,
  tiles: Tiles,
  visited: Set<string> = new Set<string>(),
  depth: number = 0
) {
  // Return if we've visited this tile already
  if (visited.has(tile.id)) return;

  // Ensure we do not visit ourselves
  visited.add(tile.id);

  // Compare the edges of the tile with the next one
  Object.values(tiles)
    .filter(({ id }) => !visited.has(id))
    .forEach((nextTile) => compareEdges(tile, nextTile));

  Object.values(tile.matches).forEach((matchedTileId) => {
    recursiveAssignment(tiles[matchedTileId], tiles, visited, depth + 1);
  });
}

function buildGrid(
  tile: Tile,
  grid: string[][],
  tiles: Tiles,
  i: number = 0,
  j: number = 0
) {
  const n = tile.grid.length - 2;
  for (let x = 1; x <= n; x++) {
    for (let y = 1; y <= n; y++) {
      grid[i * n + (x - 1)][j * n + (y - 1)] = tile.grid[x][y];
    }
  }

  // Only build right and down
  Object.keys(tile.matches)
    .filter((side: Side) => side === 'right' || side === 'bottom')
    .forEach((side: Side) => {
      const right = side === 'right';
      const bottom = side === 'bottom';

      buildGrid(
        tiles[tile.matches[side]],
        grid,
        tiles,
        i + (bottom ? 1 : 0),
        j + (right ? 1 : 0)
      );
    });
}

function part1(normTiles: Tiles) {
  const tiles = Object.values(normTiles);
  recursiveAssignment(tiles[0], normTiles);

  return tiles
    .filter((tile) => Object.keys(tile.matches).length === 2) // get corners
    .reduce((acc, tile) => acc * parseInt(tile.id), 1);
}

function part2(normTiles: Tiles) {
  const tiles = Object.values(normTiles);
  // Perform recursive assignments
  recursiveAssignment(tiles[0], normTiles);

  // Build Out Grid after assignments have been made
  const sideN = Math.sqrt(tiles.length);
  const n = sideN * (tiles[0].grid.length - 2);
  const grid: string[][] = [];
  for (let i = 0; i < n; i++) {
    grid.push([]);
    for (let j = 0; j < n; j++) {
      grid[i].push(null);
    }
  }

  // Assign top left corner to [0, 0]
  const topLeftTile = tiles.find(
    ({ matches: { right, left, bottom, top } }) =>
      !!right && !!bottom && !left && !top
  );
  buildGrid(topLeftTile, grid, normTiles);

  const seaMonsterRegex = seaMonster.split('\n').map((line) => {
    let regex = '';
    for (let char of line) regex += char === ' ' ? '.' : '#';
    return new RegExp(regex, 'g');
  });

  const numSeaMonsterHash = seaMonster.split('\n').reduce((total, line) => {
    return (
      total +
      line
        .split('')
        .reduce((numHashes, char) => (numHashes += char === '#' ? 1 : 0), 0)
    );
  }, 0);

  const numTotalHashes = grid.reduce(
    (acc, row) =>
      acc + row.reduce((acc1, cell) => acc1 + (cell === '#' ? 1 : 0), 0),
    0
  );

  flipGrid(grid, 'X');
  rotateGrid(grid, 'CW');
  rotateGrid(grid, 'CW');
  const img = grid.map((row) => row.join(''));

  // Get locations of '#' for sea monsters
  const seaMonsterHashLocations = seaMonster
    .split('\n')
    .reduce((acc, line, i) => {
      line.split('').forEach((char, j) => char === '#' && acc.push([i, j]));
      return acc;
    }, []);

  // Find Sea monsters and replace them with 'O' for '#'
  for (let i = 0; i < grid.length - 2; i++) {
    const row = img[i];
    for (let j = 0; j < grid.length - 20; j++) {
      const search = row.substr(j).search(seaMonsterRegex[0]);
      if (search > -1) {
        const nextLineSearch = img[i + 1].substr(j).search(seaMonsterRegex[1]);
        if (nextLineSearch === search) {
          const lastLineSearch = img[i + 2]
            .substr(j)
            .search(seaMonsterRegex[2]);

          if (lastLineSearch === search) {
            seaMonsterHashLocations.forEach(
              ([m, n]) => (grid[i + m][j + search + n] = 'O')
            );
          }
        }
      }
    }
  }

  return grid.reduce(
    (acc, row) =>
      acc + row.reduce((acc1, cell) => acc1 + (cell === '#' ? 1 : 0), 0),
    0
  );
}

const providedInput = `Tile 1621:
.#.##...#.
#..#..#.#.
#.#..#..##
.....#..#.
.#..#...##
#....#...#
.#........
#.#.#....#
...#...#..
.#..#....#

Tile 3671:
..#.#.###.
#.##....##
#.........
##..#.#...
#..###....
..#.#....#
##..###..#
..#......#
.........#
......###.

Tile 2803:
#.#.#..#..
#.....#...
...##..###
#.#.....##
#...#..#.#
..#...##.#
..#...#..#
####.#..##
#..##....#
#..#.##.#.

Tile 1531:
####.#####
.###...###
##..#..#.#
##.#..#..#
#....#..##
##.#....#.
#.#.##....
....#..#..
#...#.....
##....#...

Tile 1811:
#.#...#..#
##....#.##
#...##.#..
#..##.....
.#.#.....#
##..#.....
##.#......
..#...##..
.#.##....#
##...##..#

Tile 2143:
##.###.#.#
#..##.##..
###.......
..##.#...#
#.......#.
#.#....##.
...#..####
..##...#.#
#.#..#.##.
#.#.#...##

Tile 2887:
.......##.
#..#..#..#
....#.....
...#..##..
..#.......
#...##..##
..#...##..
#.....#.##
##..#..##.
#...#.####

Tile 3511:
.#.##....#
#.#...##.#
#...##.###
....#.....
..#......#
.###.#..#.
#.........
#.#....###
.......#.#
#..#######

Tile 3911:
.#..#.###.
#...#.##..
.#..#...##
##.#.##.##
....#.#..#
...###....
.....#...#
...##..#..
###.#.#.#.
##.....#.#

Tile 3821:
#####..#..
##..#.....
....##.#.#
#....#....
#...##.#.#
#........#
####......
#.#.#....#
....######
..#...###.

Tile 3539:
#####.##..
#........#
####.#....
.##..#.#.#
#.....#...
#.#......#
##...###.#
.#..#.....
#.#.......
...#...#..

Tile 3251:
....#..##.
.###.#...#
#..#.....#
...#.....#
..#.......
.##..#...#
#.......##
#.....#...
....#..#.#
######.#.#

Tile 2677:
.#...#...#
...#.###..
......##..
#.##.##...
#.#...#.##
#..#####..
......##..
......##.#
#..#..#...
..##.####.

Tile 3011:
#.#..#..##
#.###..#..
#..#..##..
#.#..#...#
##...#####
....#..###
.#..#..#.#
..#...#..#
##.##..#.#
.#.##.....

Tile 1489:
#...##.###
#.#..#....
#.....#..#
##..#.....
...#....##
.##.##.#.#
#.#......#
#........#
....#.....
##.#.#####

Tile 3769:
.....####.
##....####
###....#.#
.##..#.#.#
..........
##....####
#...#..#..
...#.....#
##.#.....#
#...##.###

Tile 2293:
.#..#.#...
####......
##...#....
###.#.#...
.##.##...#
......#.#.
##.....#..
#..#.##.##
.##....##.
.#.....#..

Tile 3947:
.#.#...##.
..........
..#...##.#
..###..#.#
##...#.###
.#..#..#..
#.#....#..
....#.#..#
.#....####
######..#.

Tile 1223:
#..#####.#
###..#..##
##.###....
...##.#...
..#.##.#..
##.###...#
...#..#.##
...#..#...
.#....#..#
#..####...

Tile 3331:
#.....##..
##..###.#.
.##.#...#.
.##..#.#..
#......#..
...#.....#
###.#.#...
.##......#
#..#......
...#...###

Tile 3691:
#..#..#.##
......#..#
#.#..##..#
###.......
#.#....##.
##.#..##..
#......#..
..#.......
...#.#..#.
#..#......

Tile 1289:
#.......#.
##.##....#
####......
.#..#.#..#
#.#.#..###
#..#......
##.#####..
.#........
##.##....#
##.#######

Tile 2857:
.#.#..#.##
.....#.#..
#..#...#..
.##...#..#
##..#..#.#
#..#..#..#
...#......
#.#.#.....
##...#....
....#.##..

Tile 3559:
#.##..##..
..#.##.###
##..#....#
#.#..#..#.
##.####..#
.....#...#
#....#....
##..#.##..
#..#.....#
###.##..##

Tile 2633:
...#.#..##
##.......#
#...##..#.
#.#....#.#
.........#
...#.....#
.#.##....#
...#..#...
#.#.##....
..#..##...

Tile 1973:
#.#.....#.
#.......#.
#....#....
.#.#...##.
.........#
#.......#.
...#.##..#
.##...#...
##..#..#..
####..##.#

Tile 1373:
#####.#..#
##.##..###
#.####...#
..###.#...
....##...#
#...#....#
##.#....##
.......#..
##.#.##.#.
#.###.##.#

Tile 1759:
.#.....##.
#.#..#...#
....###..#
........##
....#.....
.....#..#.
#...#....#
.#..#...#.
...#.#.#..
##...#..##

Tile 1213:
#....###.#
###...##.#
.#.....#.#
#......##.
.#...#.##.
.##.......
....##...#
#.........
.........#
#.....#.##

Tile 2341:
#.....#.#.
...##.#..#
.....##..#
......##.#
#...#....#
..#...###.
..##.#.#.#
.#.#....##
.#.....###
.#.#...##.

Tile 3547:
####.#.#.#
...###...#
#..#.##...
##..#.#...
#....#.#.#
.#.......#
.#.#......
###.....#.
#.#....###
.#.##.#...

Tile 2003:
#####.####
...#..#..#
.#.......#
#.#.#...##
.#.#.#..#.
#......#..
...#..#...
.#...#.#..
#........#
####.###..

Tile 2861:
#..##.##..
..#.#....#
....##.#..
##........
#.........
##.....#.#
##.....##.
####.....#
###..#####
.........#

Tile 3697:
#..##.####
.....#....
#.#.#.#.#.
#.##...###
..##.....#
.#.......#
.##.......
#.#..#...#
.#.###.#..
####.####.

Tile 3929:
.#.##..#.#
##.#....##
....#.#..#
....#.#.#.
##........
...#..#...
###....#.#
#........#
.###.##.##
###..#####

Tile 3527:
#.#.#...#.
####.#....
......#...
.##......#
.#......##
.##.#.#.##
#..#......
#.....#...
.#........
..#..####.

Tile 1777:
.#..#...##
#....###..
..#..##.##
..##...#..
....#.#...
#...##.#..
#..##.#..#
...##.....
.#....#..#
.#..#..###

Tile 1543:
......#...
.#...##...
#...#..#.#
..........
#..##....#
..#.#...##
...#.####.
##....#...
...#..####
.#.#..####

Tile 2063:
##....#...
#.....#...
###.##...#
......#..#
...##..#..
###.#.....
##.....##.
#..#.##...
##.###..##
#....###..

Tile 1181:
#.##...###
####.#....
.........#
####..##.#
.....#..#.
.......#..
..###....#
##..##....
#.#...#..#
.#.#.#...#

Tile 3491:
#...###.##
..##..#.##
.......##.
..........
.....#..#.
#..#......
##....#.#.
...##...#.
..###.....
..#.##..#.

Tile 1873:
...#.....#
...#.#..#.
##.#......
.#...#.###
#.#.#..#..
.....###.#
#..#..#...
....#.....
.....#.#.#
######...#

Tile 2579:
.####...#.
#..#..#..#
.....#...#
#.#..#...#
#.....##..
......#..#
#......##.
.#...##...
.#...##...
.##.####..

Tile 1481:
.#.#.#####
..#.#.##..
.###...#.#
...##.....
..#.#.#.#.
.#.......#
##.#....#.
#.#...#...
.###..#...
......##.#

Tile 2417:
.#..#..#.#
.#.#.....#
.###..##.#
#.#.#.....
#....#.###
..#..#....
#....#.#..
####....##
..#.#...##
....######

Tile 3581:
..##.....#
.....##..#
#.........
#....##..#
#..#....#.
#.....#..#
.#..#.#.#.
...#......
.....##..#
#.........

Tile 3593:
#.##.###..
###.....##
##.#....#.
###.#....#
###....#.#
#.#..#..##
......#.##
...#....#.
.#...#..#.
..#####..#

Tile 3167:
#...#.#.#.
......#.##
##.##.#.##
#...#.##.#
....#...#.
..#....##.
...#...##.
...##..#..
....#.##.#
##.#....#.

Tile 1439:
...##..###
#.#......#
..#..###.#
....#.#...
#.........
......#..#
..#.#.#..#
##.#.#....
..#...#..#
#.###.#...

Tile 1249:
..#.##...#
#.#......#
.......#..
##.#.#.#.#
.#..#..#..
..#.#..#.#
.....##.#.
#........#
..#..##.##
..#..#####

Tile 2687:
##...##...
###.###.#.
#...###..#
.#.......#
....#.#...
.....#####
##.#####..
#....#....
..#.####.#
##....#.#.

Tile 2693:
..#..#..#.
....#..###
....##....
.#.##.....
.#..###...
..##.#....
#.........
....##.##.
..#..#....
.#.#......

Tile 1741:
.#.###..##
......####
#.......##
#.#......#
##..#...#.
##.....#.#
#..#......
..##.#..##
#..#......
#.#..###.#

Tile 3413:
...####.#.
.#..#.##..
#....#.##.
##.#.....#
##.###..##
.......###
.#....###.
#....##..#
##.####..#
....#.###.

Tile 3191:
.....####.
##.##..#..
.##.#.##.#
.......###
....####..
.#.#..#.#.
...#...#..
##..#..#.#
...#..#...
..##..#.#.

Tile 2897:
#.#######.
...#....#.
#.....##.#
###.#...#.
##.#####.#
..#.##..##
#.##......
##.#.##..#
#.#....#..
#.##.#.###

Tile 2017:
##.##...##
#...#.##..
#..#.#...#
.##.......
##.......#
##..#.#..#
##.#.#.#.#
..........
..........
..######.#

Tile 2939:
#...##.##.
.....#.##.
....#.#...
#.#......#
.#.....#.#
.........#
###.....##
......#..#
#..#..##..
.##..#.##.

Tile 1753:
#...#.#.##
.#...#...#
###..#.###
#..##....#
#..#......
#.##...#..
..#...#...
#..#......
.#.......#
....#.#.##

Tile 3229:
#..####.#.
#.....#..#
......##..
#.#...##.#
#...#...##
#.#....#.#
.#..##..#.
#..#.....#
#..##.....
.#.#.#..##

Tile 1367:
####.....#
...#.##...
...#...#..
.#.###..#.
.........#
.#........
..........
.#...###.#
##........
...##..#.#

Tile 2851:
..#.#...##
#.....##.#
.##.#..#.#
#...###..#
###...#...
....#..#.#
..#.......
#.....#...
...#.#...#
.###..#..#

Tile 2357:
....##.#.#
###...#.##
####..##.#
#.####...#
#...##...#
#.#......#
#..##.#.#.
#.#....#.#
.###...#..
####..#.##

Tile 1697:
#..#.#.##.
.......#..
...##....#
##........
....#....#
##.#.....#
.##......#
#....#..#.
##.##...##
#....#...#

Tile 1571:
#.###...#.
##..#..#..
.........#
...#.#.#..
#........#
#..##.#...
##...##.#.
..........
....#.#...
.##.....#.

Tile 3323:
#.#.#..###
#...#...##
.......#.#
#.##......
..#.#..##.
#.......#.
....####.#
....##...#
..##....##
######.###

Tile 3461:
#....##.#.
....#.....
#......##.
##.....##.
#..#...##.
.#.......#
##.#......
..........
.....#..##
.....#.###

Tile 2719:
.#.#.#....
..#..#.##.
..##...###
..#..#...#
##.......#
.#........
.##..#....
..##..#...
..#....#..
.#.#.#..#.

Tile 3359:
.###...#.#
.....###.#
#..####.#.
.....##..#
..#.#...#.
#.#..###..
..#....#.#
....#.#..#
.....#..#.
#.###.#..#

Tile 3803:
.####.#..#
...#...###
.......##.
.......##.
#..#..#..#
##...#....
....##....
##........
..#..#####
..#..##...

Tile 3019:
##..###.#.
..#.......
##..#.##.#
##......#.
#......#..
#.#....#..
.###.###.#
#..#.##..#
###.##.#.#
.###.###.#

Tile 2791:
......#.#.
#....#....
##...#####
....##....
#.....##.#
..##......
#.#...#..#
...##...#.
..##....#.
##.##..#..

Tile 3881:
#....##..#
...#..#..#
.###..#..#
...#....##
#...#..#.#
#.#.#..#.#
#..##.....
...#......
#.#....#..
.#..##.###

Tile 2087:
.#..#.#...
###....###
.###..#.##
........##
###.##..##
...#...#.#
#...#....#
##..#....#
#..####.#.
##..#####.

Tile 1789:
######.#..
........#.
..#...##.#
.#.......#
.#...#....
#..#.#..##
#####.#..#
#...###..#
.#.#....##
####.##.#.

Tile 2539:
#.###.#..#
..#..#...#
##.##.#...
#.....##..
#..##..#..
..###.##.#
#..###...#
.###.#.#..
#...#.....
..###.##..

Tile 2111:
####..###.
#....###..
..#.....##
#....##.##
#.....#...
#..#.#....
...#..####
##..##..#.
##.....#.#
#.#...#.#.

Tile 1433:
#.....#..#
.#.###.#.#
.#...#.#.#
.......###
#..##.#...
.#...##.#.
#..#....##
#......#..
....#..#.#
..#.#..##.

Tile 1667:
..##......
#..#....#.
.##.#..#.#
.....#....
#.#.##..#.
...##.....
..#.#....#
#.#..#...#
...#...##.
....#....#

Tile 2389:
.#.#...#..
.#.......#
.....#....
#...###..#
..........
.#........
.#.###.#.#
#....#..#.
..#......#
##...#...#

Tile 1069:
...###..##
...#.....#
##......##
....##....
..#..##..#
##..#..#.#
##.#.#.#.#
.#..###..#
#.#.......
.#.#.#....

Tile 1103:
..###.##..
...##..#.#
#....##..#
....#..#.#
#....#.#..
###....###
..#...##..
..##.....#
#........#
.####..#..

Tile 3761:
....#.##..
###.......
#...#.....
..##.#...#
#........#
.###......
...#..#...
...#.#.#..
#....#.#.#
....#...#.

Tile 2473:
........##
.#.#..#...
.#........
.####.#.##
##..##...#
##.....#..
###.#..#.#
..........
.#.#..##.#
..#....#.#

Tile 1987:
...#..#.#.
......#...
#....#.###
..#....#..
..#..##..#
........#.
#..#.....#
...#..#..#
.......#.#
...###.##.

Tile 1187:
..#.#.#..#
##.#...##.
#......#.#
....#....#
..##...#.#
#..#..#.##
..........
..##...#.#
...####..#
.#.#.#####

Tile 2699:
###.#.##.#
.#.#####.#
.#..#..#..
.###....##
..#..##..#
.....#...#
..........
#...##...#
#.........
##..#..#.#

Tile 3643:
..##...#..
#..#..#.##
#.###.####
..##..##..
......#...
##.##..#..
...#.##.##
....#..#.#
##..#....#
#....#...#

Tile 3463:
..###.##.#
......##.#
#........#
......##.#
##.......#
##..#..#.#
##.......#
##......#.
##.#.##...
.###..#.##

Tile 1117:
#.#.##....
..#..#.###
.#..#.....
...#.#....
........#.
##.###...#
..#..#.#.#
....#..#..
..#.#....#
..#.#..#..

Tile 1163:
.##.##..##
....#..#..
##..#..#..
#..#.....#
#..#.....#
..#.##....
...#.#....
..###..#.#
...#...#.#
###.######

Tile 3557:
#.#....#..
....####.#
.#....####
..#...###.
#......#..
.......#..
##....#...
##.....#..
...#..#.#.
...###.#..

Tile 2467:
.####....#
.#.#..##.#
####......
......#.#.
#.#....#.#
##.....#..
..#....#.#
..#.##...#
.#.....###
#...##.##.

Tile 1471:
.###..#.##
##.#...##.
.#...#....
....##..#.
........#.
##....##.#
###..##.#.
#....###.#
##.....##.
#..#..##.#

Tile 3931:
#....#..##
#...#..#..
.#..######
#.###...#.
....#.##.#
#.#...####
#....#..#.
....##.#..
#..#..####
#.#.#.....

Tile 2029:
##.#.#####
#.#......#
#...##...#
#...#.....
#..##.....
#.....##.#
....##....
..##.#.###
###.#.###.
..####.##.

Tile 1913:
#..###.###
.......###
.#..#.####
.#..#.#...
..#.......
.#....###.
.###..#.#.
#....#..#.
#.#..#.#..
.#..#.#.#.

Tile 2213:
..#.##.###
......###.
..#..#...#
#..#..#.##
#....###..
...#....#.
#.##.#..#.
##.#...#..
.##....###
####.#..#.

Tile 1511:
###.#...##
.##.....#.
.##...#..#
...##.##..
#.#..#.#.#
##...###.#
###..#.###
.##.##..#.
#......#..
###.....##

Tile 2243:
#..#.#...#
##...#....
.....#.#.#
....##..#.
#..######.
.#..#.##..
#.........
...#.##.#.
.#.......#
.##...#.##

Tile 3701:
...#######
#..#...##.
...####..#
..#..#...#
##........
#.....#..#
##..#.#...
##.#.##.#.
.##.......
###.#...##

Tile 3137:
.#.####...
#..#.#...#
.......#.#
#..#.....#
#.....#...
#...###.##
.###...#.#
##......##
#.#....#.#
##...####.

Tile 2437:
#...#..###
.#.#....#.
....#...#.
.......#.#
#.#...##.#
###..#...#
#.##..#...
....#.....
#.#.#.##..
.#.#.#.###

Tile 1009:
..#.#.#...
...#..##..
##...##..#
........##
##...###.#
#....#...#
..#..#...#
..####.###
#.........
####..#..#

Tile 2399:
..####.#..
###..#....
#..#..##..
...#.#....
##.##.....
##.###..#.
##..##..##
###....#.#
..#......#
#.###..##.

Tile 2843:
.....#....
......#...
.##.#....#
..#....#..
.##.....##
.#...##.#.
####..##..
.##....##.
....##...#
#..###...#

Tile 1193:
##.....###
.......#..
.#...#.#..
#.#...#.##
..#.....##
.#.....#..
#...#....#
##.#..#.#.
##.....#.#
#..#.....#

Tile 1951:
###......#
..........
..........
#####.....
#.##..#...
.........#
##.##.....
#.#..#.##.
.#...#...#
..#.###...

Tile 1879:
#...#.....
.#.......#
###.......
#####.....
#..#.#....
...###.##.
#.......#.
#.#......#
.#..##....
..#.##.###

Tile 3469:
..####...#
#...#...#.
......###.
........#.
####.....#
#...#...#.
...#....##
#..#..#..#
..#...##.#
#####..#.#

Tile 2161:
####.####.
###...#.##
.##...#...
#..#...#..
##...##.#.
#.........
#...##...#
....#.#..#
..#.##..##
#.......##

Tile 2083:
##.##.#..#
#.##.#..#.
...#.....#
##.#.##.#.
.....#..#.
#.......#.
...###.#.#
....##...#
#.##.#...#
##.#...###

Tile 2089:
#.#.###.#.
#..##.....
.....#...#
#.........
.##...####
#...##...#
.#.......#
....#...##
#..##....#
.....##.#.

Tile 1051:
#.....##.#
.....##.#.
#...#....#
.#.#......
........#.
.......#..
##....#.##
#.......##
#........#
####.##.#.

Tile 3347:
....##.#..
#.#.#..#.#
##........
..#....#..
##...##...
.##.#.....
#........#
#..###....
.....#...#
##.##.#..#

Tile 2927:
#.##......
...#..#.##
.#.#.#.##.
..........
##....#...
##.#...#..
....##.##.
#....#.#..
..#.....#.
##.###.#..

Tile 1301:
#..##.#.#.
#.#......#
..#...#..#
##....#..#
#.........
.......#.#
....##.#..
#..#.###..
..#.######
...###.###

Tile 2459:
#..###....
...###.###
##........
##..#..#..
##.#.##.##
#.##.#..#.
#..##..##.
.#...##..#
#........#
..#.######

Tile 1583:
.#.#..#..#
#.#.#....#
.##.......
.........#
#....#....
##...###.#
#.#.......
.........#
#...#....#
#.###..#.#

Tile 3533:
.#.##.#..#
.#.......#
........#.
.#...#...#
#.........
.......#.#
...#...#..
##..#..#.#
...#.###..
.###..####

Tile 1993:
#.####..#.
..##.#.#.#
.#.#......
.#........
..#.......
#.##..#..#
##..#.....
.#.##..#..
........#.
.#.#.###.#

Tile 3853:
..#.####.#
##....##.#
..#......#
....#.....
.....#.##.
......#..#
..#..#.#.#
##....#...
###.#..##.
##...#.#.#

Tile 2113:
#..#.#.#.#
#.....#.##
#.....#..#
.##....#.#
##.#.#####
#..#......
...#...#..
...#.#..##
.......##.
..##....##

Tile 3319:
####.#..##
##....#.#.
#.......#.
......#..#
####...##.
..........
##.....#..
..#..#..##
#...#.....
.##..#...#

Tile 3847:
...##..#.#
..#.##...#
...#..####
#..#.#.#..
#........#
#....##..#
#....#..##
.#.#.##.##
.####.....
#....##..#

Tile 1283:
..##..###.
##.......#
#.#.#.....
.#.#....#.
..#..#....
#...#.....
##.......#
.##.#...##
##.####...
##..#..###

Tile 2957:
#.####.#.#
#..#..##..
#..###...#
#.#..#.#..
#.......#.
#.#..#...#
######....
#.......##
#...#...#.
.##..#.##.

Tile 1097:
.###.#.###
#......##.
#........#
....#...#.
..##..#.#.
#....#..##
.###...##.
..##.#...#
#..#.####.
#.#.......

Tile 1399:
#.###..###
#...##.###
....#.#...
#...##.#..
..#...#..#
#...###...
.......#..
..#.#.#...
...##...#.
...##..##.

Tile 1451:
#.#...#.#.
#........#
#.#....#.#
###.#.....
....##....
.##.#..#..
.#.####..#
..#..###.#
...#...#.#
#...##.#.#

Tile 1559:
#..#.#.###
......#...
.....#..##
#.........
##..#.....
...#...#..
##.#.#....
.....#.##.
#...#.#.#.
...#####..

Tile 3391:
#.#.#.#..#
##..#.....
.#...###..
......#..#
#.#.....#.
...#..#...
.#......#.
.......#..
.....#.#.#
#.#.#.##.#

Tile 2423:
#.#.#....#
#......#..
#.#.#.#.##
...#.#.#.#
....#.#.#.
.......#..
.##.....#.
.........#
#.#..#...#
...##..##.

Tile 2297:
.....#####
#..#......
#...#.....
##...#.#..
.......##.
#.......#.
###....###
..#.....#.
.....##...
##.##.###.

Tile 2011:
#######...
#.#...#.#.
...##..#..
...##..#.#
......#..#
#..#.....#
...#.#....
....#.#...
..#.###..#
#.#####.#.

Tile 1049:
#.#...#...
.......###
#..#.#..##
##.......#
.#.###...#
##....#...
...#.##...
........#.
...#..#.#.
##...##.##

Tile 3943:
..#...####
...#.##...
#.#.###...
.#...###.#
....#.##..
.##...#..#
####.....#
####.##.#.
##...#....
.##.#...#.

Tile 2039:
#####.#..#
#.#....###
.....#....
##.....#.#
.......#..
#......#..
..#...#..#
#.#...#...
..##...#..
##.#######

Tile 1297:
.#..##.###
#.....#..#
###..##..#
.##..#..##
...#......
#..#....##
..#......#
...##.#..#
....##....
#..###.#..

Tile 1597:
.#..#.##..
###......#
#...##...#
.#.#....##
...##.##..
#.###....#
###.#.....
..#....#.#
...##....#
###.##....

Tile 1319:
...#.##..#
#.#####...
..........
.#..#..#..
#...#.#.#.
.#.##..#..
###.......
#...#.##..
...#.....#
##.#####.#

Tile 2333:
#..##..##.
...#...#.#
..##.#....
#....#.##.
..##..##.#
..##..###.
...##.#..#
.....#.#.#
#......#.#
########..

Tile 1423:
#.##..##..
#.##.....#
#.#..##...
##.#####..
...#.#..#.
.#..#.#.#.
#.##....##
...###..##
#.#.#...#.
#..##.###.

Tile 1303:
.#########
##..#....#
..#.#.####
..........
#...#.....
#.#..#...#
###.#.....
.##.#....#
#.#.#..#..
##..##..#.`;

const exampleInput = `Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...`;

const seaMonster = `                  # 
#    ##    ##    ###
 #  #  #  #  #  #   `;

function processInput(input: string): Tiles {
  const tileRegex = /Tile (\d+?):\n/;
  return input
    .split('\n\n')
    .reduce((acc, tile) => {
      const match = tile.match(tileRegex);
      const grid = tile
        .replace(tileRegex, '')
        .split('\n')
        .map((line) => line.split(''));
      acc.push({
        id: match[1],
        grid,
        matches: {},
      });
      return acc;
    }, [] as Tile[])
    .reduce((acc, cur) => {
      acc[cur.id] = cur;
      return acc;
    }, {} as Tiles);
}

const input = processInput(providedInput);
run(part1, input);
run(part2, input);
export {};
